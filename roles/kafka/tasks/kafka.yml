---
- name: Check directory.
  ansible.builtin.stat:
    path: "{{ kafka_folder }}"
  register: my_folder
  tags: configuration

- name: Create directory if not exists
  ansible.builtin.file:
    path: "{{ kafka_folder }}"
    state: directory
    mode: '0755'
    group: "{{ kafka_group }}"
    owner: "{{ kafka_user }}"
  when: my_folder.stat.exists == false
  tags: configuration

- name: Ensures {{ kafka_folder }}/data dir exists
  ansible.builtin.file: 
    path: '{{ kafka_data_dir }}'
    group: "{{ kafka_group }}"
    owner: "{{ kafka_user }}"
    state: directory
  tags: configuration

- name: Ensures {{ kafka_folder }}/logs dir exists
  ansible.builtin.file: 
    path: '{{ kafka_folder }}/logs'
    group: "{{ kafka_group }}"
    owner: "{{ kafka_user }}"
    state: directory
  tags: configuration

- name: Ensures {{ kafka_folder }}/home dir exists
  ansible.builtin.file: 
    path: '{{ kafka_folder }}/home'
    group: "{{ kafka_group }}"
    owner: "{{ kafka_user }}"
    state: directory
  tags: configuration

- name: Download kafka from http
  ansible.builtin.get_url:
    dest: "{{ kafka_staging_folder }}/{{ kafka_src_file }}"
    url: "{{ kafka_url }}"
    validate_certs: false
    force: false
  when: kafka_url.startswith('http')
  tags: installation

- name: Download kafka from s3
  ansible.builtin.command: "aws s3 cp {{kafka_url }} {{ kafka_staging_folder }}/{{ kafka_src_file }}"
  when: kafka_url.startswith('s3')
  tags: installation

- name: Unarchive kafka
  unarchive:
    src: "{{ kafka_staging_folder }}/{{ kafka_src_file }}"
    dest: "{{ kafka_folder }}/home"
    extra_opts: [--strip-components=1]
    remote_src: false
  tags: configuration

- name: Recursively change owner of a {{ kafka_folder }}/home directory
  ansible.builtin.file:
    path: "{{ kafka_folder }}/home"
    state: directory
    recurse: yes
    group: "{{ kafka_group }}"
    owner: "{{ kafka_user }}"

- name: Create kafka.service
  ansible.builtin.template:
    src: kafka.service.j2
    dest: /etc/systemd/system/kafka.service
    mode: 0644
  notify: restart kafka
  tags: configuration

- name: Replace kafka properties file
  ansible.builtin.template:
    src: server.properties.j2
    dest: "{{ kafka_server_properties_path }}"
    mode: 0664
    group: "{{ kafka_group }}"
    owner: "{{ kafka_user }}"
    backup: yes
  notify: restart kafka
  tags: configuration

