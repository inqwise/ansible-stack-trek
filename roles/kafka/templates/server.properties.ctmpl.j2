

{% raw %}{{ $node_id := keyOrDefault "{% endraw %}{{ kafka_consul_template_node_id_key }}{% raw %}" "1" }}
{% endraw %}
{% raw %}node.id={{ $node_id }}
{% endraw %}
listeners=PLAINTEXT://0.0.0.0:9092

{% raw %}
{{ $services := service "kafka-controller" }}
{{ if $services }}
controller.quorum.voters = {{ range $services }}{{ $node_id }}@{{ .Address }}.{{ .Port }},{{ end }}
{{ else }}
controller.quorum.voters = {{ $node_id }}@{% endraw %}{{ ansible_default_ipv4.address }}:9093{% raw %}
{{ end }}
{% endraw %}


process.roles=broker,controller
{% if not skip_zookeeper %}
zookeeper.connect={{ "{{" }} key "{{ kafka_consult_template_zookeeper_connection_key }}" {{ "}}" }}
{% endif %}

advertised.listeners=PLAINTEXT://{{ kafka_advertised_listener | default(ansible_fqdn) }}:9092
log.dirs={{ kafka_data_dir }}
num.partitions= {{ kafka_num_partitions }}
default.replication.factor={{ kafka_default_replication_factor }}
min.insync.replicas={{ kafka_min_insync_replicas }}
delete.topic.enable={{ kafka_delete_topic_enable }}
log.retention.hours={{ kafka_log_retention_hours }}
log.segment.bytes={{ kafka_log_segment_bytes }}
log.retention.check.interval.ms={{ kafka_log_retention_check_interval_ms }}
auto.create.topics.enable={{ kafka_auto_create_topics_enable }}

listeners=PLAINTEXT://:9092,CONTROLLER://:9093
controller.listener.names=CONTROLLER
